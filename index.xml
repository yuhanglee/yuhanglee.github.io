<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>博客</title><link>https://yuhanglee.github.io/</link><description>lyh的博客：记录工作生活乐趣。</description><generator>Hugo 0.145.0 &amp; FixIt v0.3.17-8b402129</generator><language>zh-CN</language><copyright>本站内容采用 CC BY-NC-SA 4.0 国际许可协议。</copyright><lastBuildDate>Mon, 10 Mar 2025 00:30:35 +0000</lastBuildDate><atom:link href="https://yuhanglee.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>zephyr教程-环境配置</title><link>https://yuhanglee.github.io/posts/e3e350c/</link><pubDate>Tue, 04 Feb 2025 22:08:09 +0800</pubDate><guid>https://yuhanglee.github.io/posts/e3e350c/</guid><category domain="https://yuhanglee.github.io/categories/zephyr/">zephyr</category><description>&lt;div class="details admonition quote">
 &lt;div class="details-summary admonition-title">&lt;i class="icon fa-fw fa-solid fa-quote-right" aria-hidden="true">&lt;/i>quote&lt;i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true">&lt;/i>&lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">zephyr 是一个类 Linux 的开发方式， 其工程由 Linux 基金会管理。&lt;/div>
 &lt;/div>
&lt;/div>
&lt;ol>
&lt;li>Zephyr 项目介绍
Zephyr项目是一个Linux基金会托管的协作项目，一个开源合作项目，联合了业内领先企业，为所有资源受限设备构建了针对资源受限设备进行优化的最佳小型可扩展实时操作系统（RTOS）。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Zephyr 主页
&lt;a href="https://github.com/zephyrproject-rtos/zephyr"target="_blank" rel="external nofollow noopener noreferrer">zephyrproject-rtos/zephyr:&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>
Zephyr 官网
&lt;a href="https://docs.zephyrproject.org"target="_blank" rel="external nofollow noopener noreferrer">docs.zephyrproject.org&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>&lt;/p>&lt;/blockquote>
&lt;ol start="2">
&lt;li>安装 Ubuntu 环境&lt;/li>
&lt;/ol>
&lt;p>Ubuntu安装可以分为两种方式：物理机与虚拟机。
物理机安装：在电脑硬盘上重新安装一个新的 Ubuntu 镜像，每次开机可以选择是否启动 Ubuntu 系统。
虚拟机安装：在 Windows 系统中，安装 Vmware 软件，由软件虚拟出一个“电脑”，安装 Ubuntu ，可以和 Windows 同时启动。&lt;/p>
&lt;p>我们选择第二种，使用虚拟机的方式，安装 &lt;a href="https://cn.ubuntu.com/download/server/step1"target="_blank" rel="external nofollow noopener noreferrer">Ubuntu Server 24.04 LTS&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>。 安装教程，可以参考 &lt;a href="https://blog.csdn.net/qingzhumuqingfeng/article/details/144011787"target="_blank" rel="external nofollow noopener noreferrer">VMware安装ubuntu-24.04-live-server服务版超详细教程_ubuntu 24.04 live server-CSDN博客&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>&lt;/p>
&lt;p>由于 Ubuntu Server 没有界面，所以我选择使用 VS Code 的 SSH 插件，在 Windows 上进行开发。&lt;/p>
&lt;blockquote>
&lt;p>VS Code 配置&lt;/p>
&lt;ol>
&lt;li>VS Code 插件库内搜索 《Remote - SSH》并安装。&lt;/li>
&lt;li>按下 Ctrl+Shift+P 选择 Remote-SSH， 并填写 Ubuntu 的 IP 地址、用户名、密码。
&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/e3e350c/img/%E5%91%BD%E4%BB%A4%E7%AA%97%E5%8F%A3.png" alt="命令窗口" srcset="https://yuhanglee.github.io/posts/e3e350c/img/%E5%91%BD%E4%BB%A4%E7%AA%97%E5%8F%A3.png?size=small, https://yuhanglee.github.io/posts/e3e350c/img/%E5%91%BD%E4%BB%A4%E7%AA%97%E5%8F%A3.png?size=medium 1.5x, https://yuhanglee.github.io/posts/e3e350c/img/%E5%91%BD%E4%BB%A4%E7%AA%97%E5%8F%A3.png?size=large 2x" data-title="命令窗口" style="--width: 1029px;--aspect-ratio: 1029 / 216;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>
&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/e3e350c/img/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81.png" alt="输入密码" srcset="https://yuhanglee.github.io/posts/e3e350c/img/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81.png?size=small, https://yuhanglee.github.io/posts/e3e350c/img/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81.png?size=medium 1.5x, https://yuhanglee.github.io/posts/e3e350c/img/%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81.png?size=large 2x" data-title="输入密码" style="--width: 741px;--aspect-ratio: 741 / 104;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/li>
&lt;li>打开终端窗口，就可以看到已经进入 Ubuntu 系统了。
&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/e3e350c/img/%E7%BB%88%E7%AB%AF.png" alt="终端" srcset="https://yuhanglee.github.io/posts/e3e350c/img/%E7%BB%88%E7%AB%AF.png?size=small, https://yuhanglee.github.io/posts/e3e350c/img/%E7%BB%88%E7%AB%AF.png?size=medium 1.5x, https://yuhanglee.github.io/posts/e3e350c/img/%E7%BB%88%E7%AB%AF.png?size=large 2x" data-title="终端" style="--width: 988px;--aspect-ratio: 988 / 250;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;ol start="3">
&lt;li>配置 Zephyr 环境&lt;/li>
&lt;/ol>
&lt;p>可以参考 &lt;a href="https://docs.zephyrproject.org"target="_blank" rel="external nofollow noopener noreferrer">docs.zephyrproject.org&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a> 的官方教程，或者按照下面命令依次安装。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 Zephyr 所依赖的本地环境和软件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install cmake python3 device-tree-compiler 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 检查软件是否已经安装成功&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python3 --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dtc --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 python 虚拟环境&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip3 install virtualenv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip3 install virtualenvwrapper
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建虚拟环境配置保存目录，并设置环境变量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir &lt;span class="nv">$HOME&lt;/span>/.virtualenvs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo vim ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">WORKON_HOME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/.virtualenvs 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUALENVWRAPPER_PYTHON&lt;/span>&lt;span class="o">=&lt;/span>/usr/bin/python3.10 &lt;span class="c1"># 根据你的Python路径修改 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> /usr/local/bin/virtualenvwrapper.sh &lt;span class="c1"># 路径根据virtualenvwrapper 安装路径修改&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建虚拟环境，并指定 python 版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkvirtualenv -p /usr/bin/python3 env_zephyr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 激活虚拟环境&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">workon env_zephyr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用 pip 安装 west 构建软件，后续用来编译 Zephyr 工程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install west
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 初始化 Zephyr 工作目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">west init ~/zephyrproject
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/zephyrproject
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更新软件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">west update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 指定编译器方式有两种： 使用 Zephyr 指定的版本，自定义编译器版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 使用 Zephyr 指定版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果没有 .zephyrrc 则需要自己创建&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim ~/.zephyrrc 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ZEPHYR_TOOLCHAIN_VARIANT&lt;/span>&lt;span class="o">=&lt;/span>zephyr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 如果使用 ARM 芯片，可以手动指定 gnu arm，以及指定工具链路径&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim ~/.zephyrrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">ZEPHYR_TOOLCHAIN_VARIANT&lt;/span>&lt;span class="o">=&lt;/span>gnuarmemb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GNUARMEMB_TOOLCHAIN_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/arm-none-eabi &lt;span class="c1"># 执行本地的 arm-none-eabi 路径，该路径下有 bin 文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果使用 west build 编译报错找不到 ninja，则需要安装 ninja 环境。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt install ninja-build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ninja --verion &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 全部更新完成之后的软件列表如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bootloader modules tools zephyr&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>测试编译速度&lt;/li>
&lt;/ol>
&lt;p>在 &lt;code>~/zephyrproject&lt;/code> 路径下，执行 &lt;code>time west build -b stm32f103_mini zephyr/samples/hello_world --build-dir build/stm32f103_mini&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入 zephyr 工作目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; &lt;span class="nb">cd&lt;/span> ~/zephyrproject
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 切换 python 虚拟环境，如果之前已经进入，则不需要这个步骤。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 一般会有报错： 无法找到 west 软件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; workon env_zephyr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -b : 执行控制器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># zephyr/samples/hello_world 需要编译的应用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># --build-dir build/stm32f103_mini 指定编译结果保存路径 也可以使用 -d build/stm32f103_mini&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; &lt;span class="nb">time&lt;/span> west build -b stm32f103_mini zephyr/samples/hello_world --build-dir build/stm32f103_mini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编译正常完成。共用时 20.921 秒&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>135/135&lt;span class="o">]&lt;/span> Linking C executable zephyr/zephyr.elf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Memory region Used Size Region Size %age Used
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FLASH: &lt;span class="m">12854&lt;/span> B &lt;span class="m">256&lt;/span> KB 4.90%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RAM: &lt;span class="m">4160&lt;/span> B &lt;span class="m">48&lt;/span> KB 8.46%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IDT_LIST: &lt;span class="m">0&lt;/span> GB &lt;span class="m">32&lt;/span> KB 0.00%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Generating files from /home/liyuhang/zephyrproject/build/stm32f103_mini/zephyr/zephyr.elf &lt;span class="k">for&lt;/span> board: stm32f103_mini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">west build -b stm32f103_mini zephyr/samples/hello_world --build-dir 35.57s user 15.28s system 243% cpu 20.921 total&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，Zephyr 基础环境配置工作已经完成。&lt;/p></description></item><item><title>RTT 启动顺序</title><link>https://yuhanglee.github.io/posts/b234ee6/</link><pubDate>Tue, 04 Jun 2024 20:50:07 +0800</pubDate><guid>https://yuhanglee.github.io/posts/b234ee6/</guid><category domain="https://yuhanglee.github.io/categories/draft/">draft</category><description>&lt;div class="details admonition abstract open">
 &lt;div class="details-summary admonition-title">&lt;i class="icon fa-fw fa-solid fa-clipboard-list" aria-hidden="true">&lt;/i>启动&lt;i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true">&lt;/i>&lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">启动是系统的第一个动作。&lt;/div>
 &lt;/div>
&lt;/div>
&lt;p>系统在完成堆桟初始化之后，就可以调用 &lt;code>rtthread_startup&lt;/code> 函数，完成操作系统启动动作。&lt;/p>
&lt;p>&lt;code>rtthread_startup&lt;/code> 函数内主要操作：&lt;/p>
&lt;ul>
&lt;li>关闭中断&lt;/li>
&lt;li>初始化必要的片上驱动&lt;/li>
&lt;li>初始化系统定时器&lt;/li>
&lt;li>初始化系统调动器&lt;/li>
&lt;li>初始化信号，如果使用了的话&lt;/li>
&lt;li>创建第一个应用线程&lt;/li>
&lt;li>创建定时器线程&lt;/li>
&lt;li>创建空闲线程&lt;/li>
&lt;li>加锁CPU锁&lt;/li>
&lt;/ul>
&lt;p>最后启动调度器，在调度器内启动第一个线程(一般为&lt;code>main&lt;/code>线程)，并且永远都不会返回。&lt;/p>
&lt;div class="details admonition info open">
 &lt;div class="details-summary admonition-title">&lt;i class="icon fa-fw fa-solid fa-circle-info" aria-hidden="true">&lt;/i>信息&lt;i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true">&lt;/i>&lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">为啥不会返回呢？因为完成调度之后，就跳转到第一个线程上执行，且后续会在各个线程中跳转，无法返回调度器函数。&lt;/div>
 &lt;/div>
&lt;/div>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C" data-lang="C">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">rt_system_scheduler_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">struct&lt;/span> &lt;span class="n">rt_thread&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">rt_ubase_t&lt;/span> &lt;span class="n">highest_ready_priority&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * legacy rt_cpus_lock. some bsp codes still use it as for it&amp;#39;s critical
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * region. Since scheduler is never touching this, here we just release it
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * on the entry.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 主动释放掉 `cpus` 锁，防止前面使用过忘记释放。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">rt_hw_spin_unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">_cpus_lock&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* ISR will corrupt the coherency of running frame */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">rt_hw_local_irq_disable&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * for the accessing of the scheduler context. Noted that we don&amp;#39;t have
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * current_thread at this point
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 加锁调度器。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 我们还没有完成调度器初始化，所以无法使用多核调度，也就不能让其他核心使用调度器。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">_fast_spin_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">_mp_scheduler_lock&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* get the thread scheduling to */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 获取当前就绪列表中优先级最高的任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 任务在执行 `rt_thread_startup` 之后，就已经加入就绪列表中。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 一般在启动调度器之前，只会初始化个别系统任务。如：主任务、空闲任务、软件定时器任务。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">to_thread&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">_scheduler_get_highest_priority_thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">highest_ready_priority&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 最高任务不能为空，这个很好解释，如果将要跳转的先成为空，那应该向哪里跳转呢。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">RT_ASSERT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* to_thread is picked to running on current core, so remove it from ready queue */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// todo:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">_sched_remove_thread_locked&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* dedigate current core to `to_thread` */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 重新设置第一个线程的核心为启动核，当然启动核心也非必须是ID为0的核心
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 需要考虑一个问题，除了主线程在调度器启动之后立即执行，其余线程，如空闲线程，软件定时器线程是否永远被启动核绑定并执行？
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">RT_SCHED_CTX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">oncpu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rt_hw_cpu_id&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">RT_SCHED_CTX&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">stat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RT_THREAD_RUNNING&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">LOG_D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;[cpu#%d] switch to priority#%d thread:%.*s(sp:0x%08x)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">rt_hw_cpu_id&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="nf">RT_SCHED_PRIV&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">current_priority&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RT_NAME_MAX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">to_thread&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">to_thread&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">sp&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">_fast_spin_unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">_mp_scheduler_lock&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* switch to new thread */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 切换到第一个任务，需要了解的是，第一次切换，不需要 from 线程，也就是说，只需要知道跳转地址就行。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">rt_hw_context_switch_to&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="kt">rt_ubase_t&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">to_thread&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">sp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">to_thread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* never come back */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 永远不会执行到这里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 建议增加一行代码 
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// RT_DEBUG(0);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 这样在启动失败之后，可以非常迅速定位到问题
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="details admonition info open">
 &lt;div class="details-summary admonition-title">&lt;i class="icon fa-fw fa-solid fa-circle-info" aria-hidden="true">&lt;/i>信息&lt;i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true">&lt;/i>&lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">软件定时器会直接绑定到启动核心，但是空闲任务是每个核心都会执行，所以不需要特别关心。&lt;/div>
 &lt;/div>
&lt;/div>
&lt;h2 id="切换上下文" class="heading-element">&lt;span>1 切换上下文&lt;/span>
 &lt;a href="#%e5%88%87%e6%8d%a2%e4%b8%8a%e4%b8%8b%e6%96%87" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>提到任务切换，跨不过去的一道坎就是上下文切换。把操作系统比作整个人体的话，系统定时器就是心脏，调度器就是大脑，决定下一个可执行哪个任务，而上下文切换就是记忆体，来保存上个动作和恢复当前动作。&lt;/p>
&lt;p>每个处理器对待现场的处理都是不一样的。例如 &lt;code>ARM&lt;/code> 处理器需要使用汇编语句一次保存通用寄存器和状态寄存器。而 &lt;code>TriCore&lt;/code> 核心有自己的上下文保存区域，简称 &lt;code>CSA(Content Savee Area)&lt;/code>。&lt;/p>
&lt;h3 id="csa" class="heading-element">&lt;span>1.1 CSA&lt;/span>
 &lt;a href="#csa" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>&lt;code>CSA&lt;/code> 是 &lt;code>TriCore&lt;/code> 核心的一个特点，在某一个指定的区域按照既定的规则来存储上下文片段，每个片段可以直接将现场保存，可以认为是&amp;quot;快照&amp;quot;，比较容易保存和恢复。每个 &lt;code>CSA&lt;/code> 占用空间为 &lt;code>64字节&lt;/code>。实际占用空间可以通过设置 &lt;code>CPU_FCX&lt;/code> 寄存器初始化第一个 &lt;code>CSA&lt;/code> 元素。&lt;/p>
&lt;p>TODO: CSA 教程&lt;/p>
&lt;h3 id="切换上下文-1" class="heading-element">&lt;span>1.2 切换上下文&lt;/span>
 &lt;a href="#%e5%88%87%e6%8d%a2%e4%b8%8a%e4%b8%8b%e6%96%87-1" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>上面提到了每个 &lt;code>CSA&lt;/code> 块都可以保存一个现场，其要执行的操作就是从 &lt;code>空闲链表&lt;/code> 中申请一块，存储现场之后，在放到上一个被使用的 &lt;code>CSA&lt;/code> 块的 &lt;code>NEXT&lt;/code> 位置，该位置需要按照规定的公式进行计算得出。同样，恢复现场的时候，需要将当前 &lt;code>CSA&lt;/code> 块清空之后，再释放到 &lt;code>空闲链表&lt;/code> 中，并设置 &lt;code>FCX&lt;/code> 寄存器的值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C" data-lang="C">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* 获取当前线程的 CSA LinkWord */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">current_upper_csa&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">LINKWORD_TO_ADDRESS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">__mfcr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CPU_PCXI&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="cm">/* 保存当前线程的 CSA 上下文 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">*&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">from&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">current_upper_csa&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* 将 to 线程的 CSA 地址赋值给当前线程的上层上下文的 LinkWord ，用于 TriCore 自动切换线程。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">current_upper_csa&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">to&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Hugo Start</title><link>https://yuhanglee.github.io/posts/hugo-start/</link><pubDate>Mon, 20 May 2024 22:20:48 +0800</pubDate><guid>https://yuhanglee.github.io/posts/hugo-start/</guid><description>&lt;p>本博客是由hugo构建的，使用的主题为 &lt;code>stack&lt;/code>。下面介绍一个比较方便的使用 &lt;code>hugo&lt;/code> + &lt;code>stack&lt;/code> + &lt;code>github page&lt;/code> 来构建属于自己的博客。&lt;/p>
&lt;p>可以参考 &lt;a href="https://github.com/CaiJimmy/hugo-theme-stack-starter"target="_blank" rel="external nofollow noopener noreferrer">hugo-stack开始指南&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>来执行构建过程。
下面我简单复刻一下过程，并对我认为需要注意的地方进行标注。&lt;/p>
&lt;ul>
&lt;li>使用 &lt;code>hugo-stack-starter&lt;/code> 仓库作为模板，来创建当前仓库.
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image.png?size=large" data-thumbnail="/posts/hugo-start/images/image.png?size=small" data-sub-html="&lt;h2>创建当前仓库&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image.png" alt="创建当前仓库" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image.png?size=large 2x" data-title="创建当前仓库" style="--width: 1319px;--aspect-ratio: 1319 / 513;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-1.png?size=large" data-thumbnail="/posts/hugo-start/images/image-1.png?size=small" data-sub-html="&lt;h2>仓库名称&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-1.png" alt="仓库名称" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-1.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-1.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-1.png?size=large 2x" data-title="仓库名称" style="--width: 805px;--aspect-ratio: 805 / 751;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;ul>
&lt;li>修改配置文件，并启动本地服务&lt;/li>
&lt;/ul>
&lt;p>使用 &lt;code>git clone github.com/username/username.github.io.git&lt;/code>，将项目克隆到本地执行。需要注意的是，如果想要在本地执行的话，则需要配置hugo环境和安装 &lt;code>stack&lt;/code> 主题。&lt;/p>
&lt;blockquote>
&lt;p>可以使用另一种方式查看当前的项目页面。
在当前仓库内，点击 &lt;code>code&lt;/code> -&amp;gt; &lt;code>Codespaces&lt;/code> -&amp;gt; &lt;code>+&lt;/code> ，添加一个对应的代码空间。该空间是一个云端，由github提供。
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-2.png?size=large" data-thumbnail="/posts/hugo-start/images/image-2.png?size=small" data-sub-html="&lt;h2>code namespaces&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-2.png" alt="code namespaces" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-2.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-2.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-2.png?size=large 2x" data-title="code namespaces" style="--width: 414px;--aspect-ratio: 414 / 489;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>
等待进度加载完成。加载过程中是在构建hugo环境和下载对应的组件及主题。
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-3.png?size=large" data-thumbnail="/posts/hugo-start/images/image-3.png?size=small" data-sub-html="&lt;h2>进度加载&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-3.png" alt="进度加载" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-3.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-3.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-3.png?size=large 2x" data-title="进度加载" style="--width: 710px;--aspect-ratio: 710 / 449;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>进度完成之后，执行 &lt;code>hugo serve -D&lt;/code> 即可开启远端服务。
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-4.png?size=large" data-thumbnail="/posts/hugo-start/images/image-4.png?size=small" data-sub-html="&lt;h2>启动远端服务&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-4.png" alt="启动远端服务" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-4.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-4.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-4.png?size=large 2x" data-title="启动远端服务" style="--width: 612px;--aspect-ratio: 612 / 251;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;p>使用 &lt;code>CTRL按键&lt;/code> + &lt;code>鼠标&lt;/code> 点击 &lt;code>localhost:1313&lt;/code>，就可以打开网页。欣赏自己的第一个博客。
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-5.png?size=large" data-thumbnail="/posts/hugo-start/images/image-5.png?size=small" data-sub-html="&lt;h2>本地端口&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-5.png" alt="本地端口" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-5.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-5.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-5.png?size=large 2x" data-title="本地端口" style="--width: 767px;--aspect-ratio: 767 / 312;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-6.png?size=large" data-thumbnail="/posts/hugo-start/images/image-6.png?size=small" data-sub-html="&lt;h2>博客页面&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-6.png" alt="博客页面" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-6.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-6.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-6.png?size=large 2x" data-title="博客页面" style="--width: 2151px;--aspect-ratio: 2151 / 255;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;ul>
&lt;li>配置自动构建工具和分支。
当然，有可能打开页面之后，还是显示 &lt;code>hugo-stack&lt;/code> 主题页面，那是因为我们还没有完成项目相关配置，也是新手比较容易踩坑的地方。&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>配置 &lt;code>config.yaml&lt;/code> 文件。
按照 &lt;code>hugo-stack-starter&lt;/code> 的 &lt;code>readme.md&lt;/code> 文件中第四条，需要修改 &lt;code>config/_default/config.toml&lt;/code> 文件中的内容。该文件名称也可能为 &lt;code>config/_default/config.yaml&lt;/code> 注意语法即可。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">baseurl: https://username.github.io/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">languageCode: zh-cn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">theme: stack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">paginate: 10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: my blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Change it to your Disqus shortname before using
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">disqusShortname: stack&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>修改主分支名称
主分支默认名称为 &lt;code>master&lt;/code>，这里需要修改。参考一下步骤：&lt;/li>
&lt;/ol>
&lt;ol>
&lt;li>修改 &lt;code>.github/workflows/deploy.yml&lt;/code> 文件内容，将master修改为main&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches: [main]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pull_request:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches: [main]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>修改仓库的主分支名称
依次点击仓库的 &lt;code>Settings&lt;/code> -&amp;gt; &lt;code>General&lt;/code> -&amp;gt; &lt;code>Default branch&lt;/code> ，就可以看到当前默认分支名称为 &lt;code>master&lt;/code>，需要修改为 &lt;code>main&lt;/code>。
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-7.png?size=large" data-thumbnail="/posts/hugo-start/images/image-7.png?size=small" data-sub-html="&lt;h2>Setting&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-7.png" alt="Setting" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-7.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-7.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-7.png?size=large 2x" data-title="Setting" style="--width: 995px;--aspect-ratio: 995 / 86;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-8.png?size=large" data-thumbnail="/posts/hugo-start/images/image-8.png?size=small" data-sub-html="&lt;h2>branch&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-8.png" alt="branch" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-8.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-8.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-8.png?size=large 2x" data-title="branch" style="--width: 1205px;--aspect-ratio: 1205 / 636;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>至于为啥不能使用 &lt;code>master&lt;/code>，暂时我也不是很清楚原因。等找到原因之后，再补充吧。&lt;/p>
&lt;ol start="3">
&lt;li>选择博客用于展示的分支&lt;/li>
&lt;/ol>
&lt;p>依次点击 &lt;code>Settings&lt;/code> -&amp;gt; &lt;code>Pages&lt;/code> -&amp;gt; &lt;code>Branch&lt;/code>，修改需要构建和部署的分支，选择 &lt;code>gh-pages&lt;/code>。
&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/hugo-start/images/image-9.png?size=large" data-thumbnail="/posts/hugo-start/images/image-9.png?size=small" data-sub-html="&lt;h2>branch&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/hugo-start/images/image-9.png" alt="branch" srcset="https://yuhanglee.github.io/posts/hugo-start/images/image-9.png?size=small, https://yuhanglee.github.io/posts/hugo-start/images/image-9.png?size=medium 1.5x, https://yuhanglee.github.io/posts/hugo-start/images/image-9.png?size=large 2x" data-title="branch" style="--width: 843px;--aspect-ratio: 843 / 247;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;p>至此，博客部署就完成了，后续只需按时提交自己的内容即可。 恭祝大家有一个优秀的体验。&lt;/p></description></item><item><title>CAN协议</title><link>https://yuhanglee.github.io/posts/can-protocol/</link><pubDate>Sun, 19 May 2024 00:00:00 +0800</pubDate><guid>https://yuhanglee.github.io/posts/can-protocol/</guid><category domain="https://yuhanglee.github.io/categories/%E6%B1%BD%E8%BD%A6/">汽车</category><category domain="https://yuhanglee.github.io/categories/can/">CAN</category><category domain="https://yuhanglee.github.io/categories/%E5%8D%8F%E8%AE%AE/">协议</category><description>&lt;img src="https://yuhanglee.github.io/posts/can-protocol/images/CAN-bus.jpg" alt="featured image" referrerpolicy="no-referrer">&lt;h2 id="can总线定义" class="heading-element">&lt;span>1 CAN总线定义&lt;/span>
 &lt;a href="#can%e6%80%bb%e7%ba%bf%e5%ae%9a%e4%b9%89" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h3 id="定义" class="heading-element">&lt;span>1.1 定义&lt;/span>
 &lt;a href="#%e5%ae%9a%e4%b9%89" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/can-protocol/images/CAN-bus.jpg?size=large" data-thumbnail="/posts/can-protocol/images/CAN-bus.jpg?size=small" data-sub-html="&lt;h2>can协议&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/can-protocol/images/CAN-bus.jpg" alt="can协议" srcset="https://yuhanglee.github.io/posts/can-protocol/images/CAN-bus.jpg?size=small, https://yuhanglee.github.io/posts/can-protocol/images/CAN-bus.jpg?size=medium 1.5x, https://yuhanglee.github.io/posts/can-protocol/images/CAN-bus.jpg?size=large 2x" data-title="can协议" style="--width: 1064px;--aspect-ratio: 1064 / 974;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;p>一直都说，CAN总线是汽车上最重要的总线接口之一。那么，CAN总线是什么呢？&lt;/p>
&lt;blockquote>
&lt;p>什么是CAN总线?&lt;/p>&lt;/blockquote>
&lt;p>你的汽车就像一个人的身体:控制器区域网络(CAN总线)是神经系统，实现通信。反过来，“节点”或“电子控制单元”(ecu)就像身体的一部分，通过CAN总线相互连接。一部分感知到的信息可以与另一部分共享。&lt;/p>
&lt;p>&lt;figure>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/can-protocol/images/CAR&amp;amp;BUS.jpg?size=large" data-thumbnail="/posts/can-protocol/images/CAR&amp;amp;BUS.jpg?size=small" data-sub-html="&lt;h2>can总线&lt;/h2>&lt;p>hello&lt;/p>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/can-protocol/images/CAR&amp;amp;BUS.jpg" alt="can总线" srcset="https://yuhanglee.github.io/posts/can-protocol/images/CAR&amp;amp;BUS.jpg?size=small, https://yuhanglee.github.io/posts/can-protocol/images/CAR&amp;amp;BUS.jpg?size=medium 1.5x, https://yuhanglee.github.io/posts/can-protocol/images/CAR&amp;amp;BUS.jpg?size=large 2x" data-title="hello" style="--width: 1191px;--aspect-ratio: 1191 / 307;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;figcaption class="image-caption">can总线&lt;/figcaption>
 &lt;/figure>&lt;/p>
&lt;blockquote>
&lt;p>什么是ECU&lt;/p>&lt;/blockquote>
&lt;p>在汽车CAN总线系统中，ECU可以是发动机控制单元、安全气囊、音响系统等。一辆现代汽车可能有多个ECU，每个ECU都有可能需要与其他网络部分共享的信息。&lt;/p>
&lt;p>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/can-protocol/images/ECU_Trans.png?size=large" data-thumbnail="/posts/can-protocol/images/ECU_Trans.png?size=small" data-sub-html="&lt;h2>ECU&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/can-protocol/images/ECU_Trans.png" alt="ECU" srcset="https://yuhanglee.github.io/posts/can-protocol/images/ECU_Trans.png?size=small, https://yuhanglee.github.io/posts/can-protocol/images/ECU_Trans.png?size=medium 1.5x, https://yuhanglee.github.io/posts/can-protocol/images/ECU_Trans.png?size=large 2x" data-title="ECU" style="--width: 1091px;--aspect-ratio: 1091 / 470;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;p>这就是CAN标准排得上用场的地方：&lt;/p>
&lt;ul>
&lt;li>CAN总线可以连接多个ECU，并进行通信&lt;/li>
&lt;li>使用双绞线，无复杂的专用布线，网络拓展性强&lt;/li>
&lt;li>支持仲裁和抢占，以及可以报告错误帧&lt;/li>
&lt;li>支持一对一和一对多通信&lt;/li>
&lt;/ul>
&lt;h3 id="osi网络" class="heading-element">&lt;span>1.2 OSI网络&lt;/span>
 &lt;a href="#osi%e7%bd%91%e7%bb%9c" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>用更专业的术语来说，CAN(controller area network)是由数据链路层和物理层来描述，在高速CAN中，&lt;code>ISO 11898-1&lt;/code> 描述了数据链路层，&lt;code>ISO 11898-2&lt;/code> 描述了物理层，如图所示，CAN的作用经常出现在7层OSI中。&lt;/p>
&lt;p>CAN总线物理层定义了电路类型、电信号水平、节点要求、电缆阻抗等。例如：&lt;code>ISO 11898-2&lt;/code>规定了许多事情，包括以下内容&lt;/p>
&lt;ul>
&lt;li>波特率： CAN节点必须使用两根绞线相连，经典CAN最高可以达到1Mbps，CANFD数据域最高可以达到5Mbps&lt;/li>
&lt;li>电缆长度： 最大的长度可以达到 500米（125Kbps）或者40米（1Mbps）&lt;/li>
&lt;li>终端： CAN总线两端必须都正确的使用120欧姆终端电阻&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/can-protocol/images/OSI-layer.png?size=large" data-thumbnail="/posts/can-protocol/images/OSI-layer.png?size=small" data-sub-html="&lt;h2>OSI分层&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/can-protocol/images/OSI-layer.png" alt="OSI分层" srcset="https://yuhanglee.github.io/posts/can-protocol/images/OSI-layer.png?size=small, https://yuhanglee.github.io/posts/can-protocol/images/OSI-layer.png?size=medium 1.5x, https://yuhanglee.github.io/posts/can-protocol/images/OSI-layer.png?size=large 2x" data-title="OSI分层" style="--width: 1085px;--aspect-ratio: 1085 / 564;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;h3 id="高速can" class="heading-element">&lt;span>1.3 高速CAN&lt;/span>
 &lt;a href="#%e9%ab%98%e9%80%9fcan" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>在汽车总线的定义中，会经常遇到不同类型的网络：下面我们提供一个简单的概述：&lt;/p>
&lt;ul>
&lt;li>高速CAN总线： 本文的重点是高速CAN总线(ISO 11898)。它是迄今为止物理层最流行的CAN标准协议，波特率支持从40Kbps到1Mbps。只需要简单的双绞线，就可以满足简单的汽车应用。还可以作为OBD，J1939，NMEA 2000，CANOpen等高层协议的基础。第二代CAN被称为CANFD，数据域可以最高支持5Mbps。&lt;/li>
&lt;li>低速CAN总线： 该标准支持的波特率较低，为40Kbps到125Kbps，且可以允许在两条总线出现故障之后，继续进行通信。因此，也被称为&amp;quot;容错CAN&amp;quot;。&lt;/li>
&lt;li>LIN总线： LIN总线是CAN总线的低成本补充，其只需要3根线就可以完成通信，可以进行更加简单的布线和更经济的网络。&lt;/li>
&lt;li>以太网： 当今随着新能源的崛起，车辆功能越来越复杂。新能源车辆以支持ADAS(高级驾驶辅助系统)、信息娱乐系统、摄像头等高带宽要求。与CAN总线相比，汽车以太网提供了更高的数据传入速率，但缺乏经典CAN和CAN FD的一些安全/性能的特征。未来一段时间，CAN、CAN FD、CAN XL和以太网基友可能同事应用于新的汽车和工业开发。&lt;/li>
&lt;/ul>
&lt;h3 id="can总线优点" class="heading-element">&lt;span>1.4 CAN总线优点&lt;/span>
 &lt;a href="#can%e6%80%bb%e7%ba%bf%e4%bc%98%e7%82%b9" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>由于CAN总线具有以下优点，CAN总线标准几乎用于所有车辆和许多场景。&lt;/p>
&lt;blockquote>
&lt;p>简单，低成本&lt;/p>&lt;/blockquote>
&lt;p>ECU可以通过单个CAN系统进行通信，而不使用更加复杂的模拟信号总线，从而减少了错误、复杂、布线、成本。&lt;/p>
&lt;blockquote>
&lt;p>集中&lt;/p>&lt;/blockquote>
&lt;p>CAN总线提供了与所有ECU网络通信的入口点，且不分主从，可以进行双向通信，从而实现中央诊断、数据记录和配置。&lt;/p>
&lt;blockquote>
&lt;p>健壮&lt;/p>&lt;/blockquote>
&lt;p>该系统对电气干扰和电磁干扰具有鲁棒性，是安全关键应用的理想选择&lt;/p>
&lt;blockquote>
&lt;p>高效&lt;/p>&lt;/blockquote>
&lt;p>CAN具有仲裁性，数据报文可以按照ID确定优先级，以便最高优先级的数据得到立即总线访问，而不会导致其他帧的中断。&lt;/p>
&lt;h3 id="can-历史" class="heading-element">&lt;span>1.5 CAN 历史&lt;/span>
 &lt;a href="#can-%e5%8e%86%e5%8f%b2" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>短暂介绍 &lt;code>CAN总线&lt;/code> 的历史：&lt;/p>
&lt;ul>
&lt;li>&lt;code>Pre CAN&lt;/code> : 汽车ECU依赖与复杂的点对点总线协议&lt;/li>
&lt;li>1986: 博世开发了CAN协议作为一个解决方案&lt;/li>
&lt;li>1991: 博世发布了CAN2.0，分为CAN 2.0 A(标准帧，11bit)和CAN 2.0 B(扩展帧，29bit)&lt;/li>
&lt;li>1993: CAN 被采纳为国际标准， ISO 11898&lt;/li>
&lt;li>2003: ISO11898 变为标准服务&lt;/li>
&lt;li>2012: 博世发布CANFD 1.0版本，加入了可变数据速率&lt;/li>
&lt;li>2015: CANFD协议被标准化，ISO11898-1&lt;/li>
&lt;li>2016: CAN物理层传输速率变为最大5Mbps，ISO11898-2&lt;/li>
&lt;li>2018: 开始CAN XL开发&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B.png?size=large" data-thumbnail="/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B.png?size=small" data-sub-html="&lt;h2>CAN标准发展过程&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B.png" alt="CAN标准发展过程" srcset="https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B.png?size=small, https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B.png?size=medium 1.5x, https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B.png?size=large 2x" data-title="CAN标准发展过程" style="--width: 1182px;--aspect-ratio: 1182 / 405;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;h3 id="can总线的未来" class="heading-element">&lt;span>1.6 CAN总线的未来&lt;/span>
 &lt;a href="#can%e6%80%bb%e7%ba%bf%e7%9a%84%e6%9c%aa%e6%9d%a5" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;blockquote>
&lt;p>展望未来，CAN总线协议将保持相关性。&lt;/p>&lt;/blockquote>
&lt;p>尽管CAN总线还受到以下主要趋势的影响：&lt;/p>
&lt;ul>
&lt;li>对日益先进的车辆功能需求&lt;/li>
&lt;li>云计算兴起&lt;/li>
&lt;li>物联网（IOT）和联网汽车的增长&lt;/li>
&lt;li>自动驾驶汽车的影响&lt;/li>
&lt;/ul>
&lt;p>特别是互联汽车(V2X)和云计算的兴起，将导致汽车远程信息处理和&lt;code>IOT CAN记录仪&lt;/code> 的快速增长。反过来，使CAN总线网络“在线”，也会使得车辆面临一些安全风险，并且可能需要转向新的CAN协议，例如：CAN FD。&lt;/p>
&lt;h3 id="canfd" class="heading-element">&lt;span>1.7 CANFD&lt;/span>
 &lt;a href="#canfd" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;blockquote>
&lt;p>CAN FD 的定义&lt;/p>&lt;/blockquote>
&lt;h3 id="can-fd-的兴起" class="heading-element">&lt;span>1.8 CAN FD 的兴起&lt;/span>
 &lt;a href="#can-fd-%e7%9a%84%e5%85%b4%e8%b5%b7" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>随着车辆功能的扩展，CAN总线的负载也在增加。为了支持这一点，CAN FD 被设计为“下一代”CAN总线。与经典CAN相比，CAN FD 提供了三个好处：&lt;/p>
&lt;ul>
&lt;li>支持最高 &lt;code>8M bps&lt;/code> 的数据域可变速率&lt;/li>
&lt;li>数据域最多支持64个字节传输&lt;/li>
&lt;li>通过身份验证提供了安全性&lt;/li>
&lt;/ul>
&lt;p>简而言之，CAN FD 提高了速度和效率，因此在交心的车辆中得到了推广。同样，这也会对 IOT CAN FD 数据记录器的需求日益增加。&lt;/p>
&lt;h2 id="can-报文定义" class="heading-element">&lt;span>2 CAN 报文定义&lt;/span>
 &lt;a href="#can-%e6%8a%a5%e6%96%87%e5%ae%9a%e4%b9%89" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h3 id="什么是can报文定义" class="heading-element">&lt;span>2.1 什么是CAN报文定义&lt;/span>
 &lt;a href="#%e4%bb%80%e4%b9%88%e6%98%afcan%e6%8a%a5%e6%96%87%e5%ae%9a%e4%b9%89" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;blockquote>
&lt;p>CAN总线上的 通信是通过CAN报文来定义，通常也会称为CAN报文。&lt;/p>&lt;/blockquote>
&lt;p>下图是CAN标准帧(CAN 2.0 A)的位定义，其中包括11bit的标识符(ID)，可以满足大多数汽车使用。扩展帧(CAN 2.0 B)除了标识符更长，达到了29bit，并且EXT需要置为显性电平，其余都和标准帧保持一致。&lt;/p>
&lt;p>&lt;a class="lightgallery" href="https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%B8%A7%E5%AE%9A%E4%B9%89.png?size=large" data-thumbnail="/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%B8%A7%E5%AE%9A%E4%B9%89.png?size=small" data-sub-html="&lt;h2>CAN标准帧定义&lt;/h2>">&lt;img loading="lazy" src="https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%B8%A7%E5%AE%9A%E4%B9%89.png" alt="CAN标准帧定义" srcset="https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%B8%A7%E5%AE%9A%E4%B9%89.png?size=small, https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%B8%A7%E5%AE%9A%E4%B9%89.png?size=medium 1.5x, https://yuhanglee.github.io/posts/can-protocol/images/CAN%E6%A0%87%E5%87%86%E5%B8%A7%E5%AE%9A%E4%B9%89.png?size=large 2x" data-title="CAN标准帧定义" style="--width: 1692px;--aspect-ratio: 1692 / 409;background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/>&lt;/a>&lt;/p>
&lt;p>各个段的定义和作用如下；&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>起始位&lt;/th>
 &lt;th>结束位&lt;/th>
 &lt;th>长度&lt;/th>
 &lt;th>定义&lt;/th>
 &lt;th>作用&lt;/th>
 &lt;th>注意&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>0&lt;/td>
 &lt;td>0&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>SOF&lt;/td>
 &lt;td>起始帧位&lt;/td>
 &lt;td>始终为 1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>11&lt;/td>
 &lt;td>11&lt;/td>
 &lt;td>ID&lt;/td>
 &lt;td>标识符&lt;/td>
 &lt;td>扩展帧为29位&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>12&lt;/td>
 &lt;td>12&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>RTR&lt;/td>
 &lt;td>远程帧&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>13&lt;/td>
 &lt;td>18&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>CTRL&lt;/td>
 &lt;td>控制&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>19&lt;/td>
 &lt;td>84&lt;/td>
 &lt;td>64&lt;/td>
 &lt;td>DATA&lt;/td>
 &lt;td>数据域&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>85&lt;/td>
 &lt;td>100&lt;/td>
 &lt;td>16&lt;/td>
 &lt;td>CRC&lt;/td>
 &lt;td>校验码&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>101&lt;/td>
 &lt;td>102&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>ACK&lt;/td>
 &lt;td>回应字&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>103&lt;/td>
 &lt;td>109&lt;/td>
 &lt;td>7&lt;/td>
 &lt;td>EOF&lt;/td>
 &lt;td>结束帧&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;div class="details admonition warning open">
 &lt;div class="details-summary admonition-title">&lt;i class="icon fa-fw fa-solid fa-exclamation-triangle" aria-hidden="true">&lt;/i>警告&lt;i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true">&lt;/i>&lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">&lt;p>ID: CAN 报文发送报文时，是需要获取仲裁权的。&lt;code>ID&lt;/code> 数值越小，优先级越高。&lt;/p>
&lt;p>控制位：包括 &lt;code>IDE&lt;/code> 和 &lt;code>DLC&lt;/code>，用来指定扩展帧位和字节长度(0~8)。&lt;/p>
&lt;/div>
 &lt;/div>
&lt;/div></description></item><item><title>TC297驱动</title><link>https://yuhanglee.github.io/posts/tc297%E9%A9%B1%E5%8A%A8/</link><pubDate>Thu, 11 Jan 2024 21:36:05 +0800</pubDate><author>jeekwe@126.com (yuhang)</author><guid>https://yuhanglee.github.io/posts/tc297%E9%A9%B1%E5%8A%A8/</guid><category domain="https://yuhanglee.github.io/categories/%E9%A9%B1%E5%8A%A8/">驱动</category><description/></item><item><title>项目经验</title><link>https://yuhanglee.github.io/posts/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/</link><pubDate>Thu, 11 Jan 2024 21:12:25 +0800</pubDate><author>jeekwe@126.com (yuhang)</author><guid>https://yuhanglee.github.io/posts/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/</guid><category domain="https://yuhanglee.github.io/categories/%E7%BB%8F%E9%AA%8C/">经验</category><description>&lt;p>个人的一些经历和项目经验更新，同时也会记录日常开发中使用的开发工具。&lt;/p>
&lt;ol>
&lt;li>&lt;a href="../driver/">TC297驱动研究&lt;/a>&lt;/li>
&lt;li>&lt;a href="../xmake-%e7%ac%ac%e4%b8%80%e5%a4%a9/">xmake 第一天&lt;/a>&lt;/li>
&lt;li>&lt;a href="../go%e6%95%99%e7%a8%8b-%e7%ac%ac%e4%b8%80%e5%a4%a9/">go 第一天&lt;/a>&lt;/li>
&lt;li>&lt;a href="../go%e6%95%99%e7%a8%8b-%e7%ac%ac%e4%ba%8c%e5%a4%a9/">go 第二天&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>xmake-第一天</title><link>https://yuhanglee.github.io/posts/xmake%E7%AC%AC%E4%B8%80%E5%A4%A9/</link><pubDate>Tue, 02 Jan 2024 21:43:58 +0800</pubDate><author>jeekwe@126.com (yuhang)</author><guid>https://yuhanglee.github.io/posts/xmake%E7%AC%AC%E4%B8%80%E5%A4%A9/</guid><category domain="https://yuhanglee.github.io/categories/xmake/">xmake</category><description>&lt;p>&lt;a href="https://xmake.io/#/zh-cn/getting_started"target="_blank" rel="external nofollow noopener noreferrer">xmake官方教程&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>&lt;/p>
&lt;h2 id="1-安装-xmake" class="heading-element">&lt;span>1 1. 安装 xmake&lt;/span>
 &lt;a href="#1-%e5%ae%89%e8%a3%85-xmake" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sudo add-apt-repository ppa:xmake-io/xmake
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install xmake&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>go教程-第二天</title><link>https://yuhanglee.github.io/posts/go%E6%95%99%E7%A8%8B-%E7%AC%AC%E4%BA%8C%E5%A4%A9/</link><pubDate>Wed, 27 Dec 2023 21:41:43 +0800</pubDate><author>jeekwe@126.com (yuhang)</author><guid>https://yuhanglee.github.io/posts/go%E6%95%99%E7%A8%8B-%E7%AC%AC%E4%BA%8C%E5%A4%A9/</guid><category domain="https://yuhanglee.github.io/categories/%E6%95%99%E7%A8%8B/">教程</category><category domain="https://yuhanglee.github.io/categories/go%E6%95%99%E7%A8%8B/">go教程</category><description>&lt;p>我们可以创建属于自己的模块，也叫做&amp;quot;造轮子&amp;quot;。&lt;/p>
&lt;p>软件开发过程中，可能要使用各种模块来完成一些小功能或者编写小工具，此时就需要有一个简单，易懂，方便的外部模块来实现特定功能，防止因为功能多，造成代码臃肿。&lt;/p>
&lt;h2 id="创建go模块" class="heading-element">&lt;span>创建Go模块&lt;/span>
 &lt;a href="#%e5%88%9b%e5%bb%bago%e6%a8%a1%e5%9d%97" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;blockquote>
&lt;p>模块内，只需要实现特定功能，尽量简洁。如果需要完成不属于该模块的功能，则需要调用其他模块。&lt;/p>&lt;/blockquote>
&lt;p>首先，需要创建一个Go模块。在模块内，可以为一组离散且有用的函数组成一个或多个相关模块包。例如，可以创建一个包，其中包含具有执行财务分析功能的包，其他编写和财务相关应用程序的开发者就可以在该模块基础之上完成对应功能。&lt;/p>
&lt;h2 id="创建绿色模块" class="heading-element">&lt;span>1 创建绿色模块&lt;/span>
 &lt;a href="#%e5%88%9b%e5%bb%ba%e7%bb%bf%e8%89%b2%e6%a8%a1%e5%9d%97" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>在模块源码路径中初始化当前目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; go mod init greetings
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go: creating new go.mod: module greetings&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在该目录下，新建文件，并命名为 &lt;code>greetings.go&lt;/code>，并将下面的代码粘贴到文件内。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">greetings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Hello returns a greeting for the named person.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Return a greeting that embeds the name in a message.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hi, %v. Welcome!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">message&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，模块内代码已经完成。该模块定义了一个函数 &lt;code>Hello&lt;/code>，被外部调用时，输出 &lt;code>Hi &amp;lt;name&amp;gt;. Welcome!&lt;/code>。&lt;/p>
&lt;p>由以上的函数，可以得出几个结论：&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>函数关键字为 func&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;ol start="2">
&lt;li>和C语言不一样的是，参数先写变量名称，后跟参数类型&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;ol start="3">
&lt;li>返回类型写到最后&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;ol start="4">
&lt;li>语句不以分号结束，按照行结束&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;ol start="5">
&lt;li>&lt;code>message&lt;/code> 未定义类型，是弱类型语言&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;h2 id="调用模块" class="heading-element">&lt;span>调用模块&lt;/span>
 &lt;a href="#%e8%b0%83%e7%94%a8%e6%a8%a1%e5%9d%97" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>除了定义的模块外，还需要可以由外部模块，调用该模块内函数或变量，以完成我们最初的功能。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">admin@DESKTOP-NQU1HUV E:&lt;span class="se">\g&lt;/span>o&lt;span class="se">\d&lt;/span>ayStudy&lt;span class="se">\2&lt;/span>day&lt;span class="se">\h&lt;/span>ello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ go mod tidy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go: found greetings in greetings v0.0.0-00010101000000-000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">admin@DESKTOP-NQU1HUV E:&lt;span class="se">\g&lt;/span>o&lt;span class="se">\d&lt;/span>ayStudy&lt;span class="se">\2&lt;/span>day&lt;span class="se">\h&lt;/span>ello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ go run .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hi, Gladys. Welcome!&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>go教程-第一天</title><link>https://yuhanglee.github.io/posts/go%E6%95%99%E7%A8%8B-%E7%AC%AC%E4%B8%80%E5%A4%A9/</link><pubDate>Sun, 24 Dec 2023 22:00:51 +0800</pubDate><guid>https://yuhanglee.github.io/posts/go%E6%95%99%E7%A8%8B-%E7%AC%AC%E4%B8%80%E5%A4%A9/</guid><category domain="https://yuhanglee.github.io/categories/%E6%95%99%E7%A8%8B/">教程</category><category domain="https://yuhanglee.github.io/categories/go%E6%95%99%E7%A8%8B/">go教程</category><description>&lt;p>借鉴&lt;a href="http://docscn.studygolang.com/doc/tutorial/getting-started"target="_blank" rel="external nofollow noopener noreferrer">官方教程&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a>，编写合适基础开发者的Go语言教程。&lt;/p>
&lt;p>作者是由 &lt;code>C语言开发者&lt;/code> 入门 &lt;code>Go语言&lt;/code>，中间是经历了一个语言的切换过程。事情的起由是需要一个嵌入式的配置平台，计划使用桌面开发框架 &lt;code>Qt&lt;/code>/&lt;code>Electron&lt;/code>/&lt;code>.Net&lt;/code>之类的，之前也使用过这些编写过小工具，语言集成度，完善度都是不错的。但是，软件需要拷贝，每次升级之后，都需要在各个系统平台上进行测试，且面临着跨平台需求。所以，本次选用了&lt;code>Web平台&lt;/code>，搭建到局域网内，每个用户只需要远程登陆网址就可以，减少团队内部更新软件不便，且只需要维护一个软件就可以完成跨平台操作。&lt;/p>
&lt;p>好了，今天开始我们的第一章教程吧。&lt;/p>
&lt;h2 id="go-环境配置" class="heading-element">&lt;span>Go 环境配置&lt;/span>
 &lt;a href="#go-%e7%8e%af%e5%a2%83%e9%85%8d%e7%bd%ae" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>Go环境配置包括 &lt;strong>安装GO&lt;/strong> ， &lt;strong>配置环境变量&lt;/strong>， &lt;strong>编写第一个程序&lt;/strong>。&lt;/p>
&lt;h2 id="安装go" class="heading-element">&lt;span>1 安装Go&lt;/span>
 &lt;a href="#%e5%ae%89%e8%a3%85go" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>安装Go要按照 &lt;a href="http://docscn.studygolang.com/doc/install"target="_blank" rel="external nofollow noopener noreferrer">官方步骤&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a> 进行安装。&lt;/p>
&lt;h2 id="使用go" class="heading-element">&lt;span>2 使用Go&lt;/span>
 &lt;a href="#%e4%bd%bf%e7%94%a8go" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>在安装完成之后，可以查看一下Go安装是否正常。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\a&lt;/span>dmin&amp;gt;go version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go version go1.21.5 windows/amd64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\a&lt;/span>dmin&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，就可以编写自己的程序了。我在 win10 下使用 VSCode 进行程序编写，你可以使用其他的编辑器或IDE。&lt;/p>
&lt;ol>
&lt;li>创建一个hello.go文件，用来编写示例代码。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; mkdir hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; &lt;span class="nb">cd&lt;/span> hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>创建依赖项。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; go mod init example.com/hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go: creating new go.mod: module example.com/hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>编写第一行go代码，输出&lt;code>Hello, World!&lt;/code>。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>运行程序。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; go run .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello, World!&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="go-帮助文档" class="heading-element">&lt;span>3 go 帮助文档&lt;/span>
 &lt;a href="#go-%e5%b8%ae%e5%8a%a9%e6%96%87%e6%a1%a3" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>&lt;code>go run&lt;/code>是我们开发&lt;code>go&lt;/code>使用最多的公式之一。除了 &lt;code>go run&lt;/code> 之外，&lt;code>go&lt;/code>还支持其他的命令和参数，如我们刚才使用过的&lt;code>mod&lt;/code>，&lt;code>version&lt;/code>。其支持的命令和参数，可以使用 &lt;code>go help&lt;/code>进行查看。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\a&lt;/span>dmin&amp;gt;go &lt;span class="nb">help&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Go is a tool &lt;span class="k">for&lt;/span> managing Go &lt;span class="nb">source&lt;/span> code.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Usage:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> go &amp;lt;command&amp;gt; &lt;span class="o">[&lt;/span>arguments&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The commands are:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bug start a bug report
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> build compile packages and dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clean remove object files and cached files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> doc show documentation &lt;span class="k">for&lt;/span> package or symbol
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> env print Go environment information
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fix update packages to use new APIs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fmt gofmt &lt;span class="o">(&lt;/span>reformat&lt;span class="o">)&lt;/span> package sources
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> generate generate Go files by processing &lt;span class="nb">source&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get add dependencies to current module and install them
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install compile and install packages and dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> list list packages or modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mod module maintenance
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> work workspace maintenance
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run compile and run Go program
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">test&lt;/span> &lt;span class="nb">test&lt;/span> packages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tool run specified go tool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> version print Go version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vet report likely mistakes in packages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Use &lt;span class="s2">&amp;#34;go help &amp;lt;command&amp;gt;&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> more information about a command.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Additional &lt;span class="nb">help&lt;/span> topics:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> buildconstraint build constraints
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> buildmode build modes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c calling between Go and C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache build and &lt;span class="nb">test&lt;/span> caching
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> environment environment variables
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> filetype file types
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> go.mod the go.mod file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gopath GOPATH environment variable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gopath-get legacy GOPATH go get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> goproxy module proxy protocol
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> importpath import path syntax
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modules modules, module versions, and more
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> module-get module-aware go get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> module-auth module authentication using go.sum
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> packages package lists and patterns
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private configuration &lt;span class="k">for&lt;/span> downloading non-public code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testflag testing flags
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testfunc testing functions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vcs controlling version control with GOVCS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Use &lt;span class="s2">&amp;#34;go help &amp;lt;topic&amp;gt;&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> more information about that topic.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Markdown Syntax Guide</title><link>https://yuhanglee.github.io/posts/markdown-syntax/</link><pubDate>Thu, 07 Sep 2023 00:00:00 +0800</pubDate><guid>https://yuhanglee.github.io/posts/markdown-syntax/</guid><category domain="https://yuhanglee.github.io/categories/themes/">themes</category><category domain="https://yuhanglee.github.io/categories/syntax/">syntax</category><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p>
&lt;h2 id="headings" class="heading-element">&lt;span>1 Headings&lt;/span>
 &lt;a href="#headings" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>The following HTML &lt;code>&amp;lt;h1&amp;gt;&lt;/code>—&lt;code>&amp;lt;h6&amp;gt;&lt;/code> elements represent six levels of section headings. &lt;code>&amp;lt;h1&amp;gt;&lt;/code> is the highest section level while &lt;code>&amp;lt;h6&amp;gt;&lt;/code> is the lowest.&lt;/p>
&lt;h2 id="h1" class="heading-element">&lt;span>H1&lt;/span>
 &lt;a href="#h1" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h2 id="h2" class="heading-element">&lt;span>1 H2&lt;/span>
 &lt;a href="#h2" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h3 id="h3" class="heading-element">&lt;span>1.1 H3&lt;/span>
 &lt;a href="#h3" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h4 id="h4" class="heading-element">&lt;span>1.1.1 H4&lt;/span>
 &lt;a href="#h4" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h4>&lt;h5 id="h5" class="heading-element">&lt;span>1.1.1.1 H5&lt;/span>
 &lt;a href="#h5" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h5>&lt;h6 id="h6" class="heading-element">&lt;span>1.1.1.1.1 H6&lt;/span>
 &lt;a href="#h6" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h6>&lt;h2 id="paragraph" class="heading-element">&lt;span>2 Paragraph&lt;/span>
 &lt;a href="#paragraph" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p>
&lt;p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.&lt;/p>
&lt;h2 id="blockquotes" class="heading-element">&lt;span>3 Blockquotes&lt;/span>
 &lt;a href="#blockquotes" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a &lt;code>footer&lt;/code> or &lt;code>cite&lt;/code> element, and optionally with in-line changes such as annotations and abbreviations.&lt;/p>
&lt;h3 id="blockquote-without-attribution" class="heading-element">&lt;span>3.1 Blockquote without attribution&lt;/span>
 &lt;a href="#blockquote-without-attribution" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;blockquote>
&lt;p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong>Note&lt;/strong> that you can use &lt;em>Markdown syntax&lt;/em> within a blockquote.&lt;/p>&lt;/blockquote>
&lt;h3 id="blockquote-with-attribution" class="heading-element">&lt;span>3.2 Blockquote with attribution&lt;/span>
 &lt;a href="#blockquote-with-attribution" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;blockquote>
&lt;p>Don&amp;rsquo;t communicate by sharing memory, share memory by communicating.&lt;br>
— &lt;cite>Rob Pike&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/cite>&lt;/p>&lt;/blockquote>
&lt;h2 id="tables" class="heading-element">&lt;span>4 Tables&lt;/span>
 &lt;a href="#tables" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>Tables aren&amp;rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>Age&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Bob&lt;/td>
 &lt;td>27&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Alice&lt;/td>
 &lt;td>23&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="inline-markdown-within-tables" class="heading-element">&lt;span>4.1 Inline Markdown within tables&lt;/span>
 &lt;a href="#inline-markdown-within-tables" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Italics&lt;/th>
 &lt;th>Bold&lt;/th>
 &lt;th>Code&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;em>italics&lt;/em>&lt;/td>
 &lt;td>&lt;strong>bold&lt;/strong>&lt;/td>
 &lt;td>&lt;code>code&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>A&lt;/th>
 &lt;th>B&lt;/th>
 &lt;th>C&lt;/th>
 &lt;th>D&lt;/th>
 &lt;th>E&lt;/th>
 &lt;th>F&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/td>
 &lt;td>Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex.&lt;/td>
 &lt;td>Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus&lt;/td>
 &lt;td>Proin sit amet velit nec enim imperdiet vehicula.&lt;/td>
 &lt;td>Ut bibendum vestibulum quam, eu egestas turpis gravida nec&lt;/td>
 &lt;td>Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="code-blocks" class="heading-element">&lt;span>5 Code Blocks&lt;/span>
 &lt;a href="#code-blocks" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h3 id="code-block-with-backticks" class="heading-element">&lt;span>5.1 Code block with backticks&lt;/span>
 &lt;a href="#code-block-with-backticks" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Example HTML5 Document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Test&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="code-block-indented-with-four-spaces" class="heading-element">&lt;span>5.2 Code block indented with four spaces&lt;/span>
 &lt;a href="#code-block-indented-with-four-spaces" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;pre>&lt;code>&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
 &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
 &amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
 &amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>
&lt;h3 id="diff-code-block" class="heading-element">&lt;span>5.3 Diff code block&lt;/span>
 &lt;a href="#diff-code-block" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">[dependencies.bevy]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git = &amp;#34;https://github.com/bevyengine/bevy&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rev = &amp;#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- features = [&amp;#34;dynamic&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+ features = [&amp;#34;jpeg&amp;#34;, &amp;#34;dynamic&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="one-line-code-block" class="heading-element">&lt;span>5.4 One line code block&lt;/span>
 &lt;a href="#one-line-code-block" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>A paragraph&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="list-types" class="heading-element">&lt;span>6 List Types&lt;/span>
 &lt;a href="#list-types" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h3 id="ordered-list" class="heading-element">&lt;span>6.1 Ordered List&lt;/span>
 &lt;a href="#ordered-list" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;ol>
&lt;li>First item&lt;/li>
&lt;li>Second item&lt;/li>
&lt;li>Third item&lt;/li>
&lt;/ol>
&lt;h3 id="unordered-list" class="heading-element">&lt;span>6.2 Unordered List&lt;/span>
 &lt;a href="#unordered-list" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;ul>
&lt;li>List item&lt;/li>
&lt;li>Another item&lt;/li>
&lt;li>And another item&lt;/li>
&lt;/ul>
&lt;h3 id="nested-list" class="heading-element">&lt;span>6.3 Nested list&lt;/span>
 &lt;a href="#nested-list" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;ul>
&lt;li>Fruit
&lt;ul>
&lt;li>Apple&lt;/li>
&lt;li>Orange&lt;/li>
&lt;li>Banana&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dairy
&lt;ul>
&lt;li>Milk&lt;/li>
&lt;li>Cheese&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="other-elements--abbr-sub-sup-kbd-mark" class="heading-element">&lt;span>7 Other Elements — abbr, sub, sup, kbd, mark&lt;/span>
 &lt;a href="#other-elements--abbr-sub-sup-kbd-mark" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>&lt;abbr title="Graphics Interchange Format">GIF&lt;/abbr> is a bitmap image format.&lt;/p>
&lt;p>H&lt;sub>2&lt;/sub>O&lt;/p>
&lt;p>X&lt;sup>n&lt;/sup> + Y&lt;sup>n&lt;/sup> = Z&lt;sup>n&lt;/sup>&lt;/p>
&lt;p>Press &lt;kbd>CTRL&lt;/kbd> + &lt;kbd>ALT&lt;/kbd> + &lt;kbd>Delete&lt;/kbd> to end the session.&lt;/p>
&lt;p>Most &lt;mark class="mark-default">salamanders&lt;/mark> are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The above quote is excerpted from Rob Pike&amp;rsquo;s &lt;a href="https://www.youtube.com/watch?v=PAAkCSZUG1c"target="_blank" rel="external nofollow noopener noreferrer">talk&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a> during Gopherfest, November 18, 2015.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>